Map<int, List<String>> createMapBodylengthF() {
  return {
    108: ["MIDRIFF", "WAIST", "MIDDLE-HIP", "HIPBONE", "HIP", "THIGH"],
    120: ["MIDRIFF", "WAIST", "MIDDLE-HIP", "HIPBONE", "HIP", "THIGH"],
    115: ["MIDRIFF", "WAIST", "MIDDLE-HIP", "HIPBONE", "HIP", "THIGH"],
    113: ["MIDRIFF", "WAIST", "MIDDLE-HIP", "HIPBONE", "HIP", "THIGH"],
    121: ["MIDRIFF", "WAIST", "MIDDLE-HIP", "HIPBONE", "HIP", "THIGH"],
    117: ["MIDRIFF", "WAIST", "MIDDLE-HIP", "HIPBONE", "HIP", "THIGH"],
    119: ["MIDRIFF", "WAIST", "MIDDLE-HIP", "HIPBONE", "HIP", "THIGH"],
    118: ["MIDRIFF", "WAIST", "MIDDLE-HIP", "HIPBONE", "HIP", "THIGH"],
    19: ["MIDRIFF", "WAIST"],
    141: ["MIDRIFF", "WAIST", "MIDDLE-HIP", "HIPBONE", "HIP", "THIGH"],
    144: ["MIDRIFF", "WAIST", "MIDDLE-HIP", "HIPBONE", "HIP", "THIGH"],
    140: ["MIDRIFF", "WAIST", "MIDDLE-HIP", "HIPBONE", "HIP", "THIGH"],
    142: ["MIDRIFF", "WAIST", "MIDDLE-HIP", "HIPBONE", "HIP", "THIGH"],
    16: ["MIDRIFF", "WAIST", "MIDDLE-HIP", "HIPBONE", "HIP", "THIGH"],
    133: ["MIDRIFF", "WAIST", "MIDDLE-HIP", "HIPBONE", "HIP", "THIGH"],
    138: ["MIDRIFF", "WAIST", "MIDDLE-HIP", "HIPBONE", "HIP", "THIGH"],
    136: ["MIDRIFF", "WAIST", "MIDDLE-HIP", "HIPBONE", "HIP", "THIGH"],
    129: ["MIDRIFF", "WAIST", "MIDDLE-HIP", "HIPBONE", "HIP", "THIGH"],
    134: ["MIDRIFF", "WAIST", "MIDDLE-HIP", "HIPBONE", "HIP", "THIGH"],
    139: ["MIDRIFF", "WAIST", "MIDDLE-HIP", "HIPBONE", "HIP", "THIGH"],
    137: ["MIDRIFF", "WAIST", "MIDDLE-HIP", "HIPBONE", "HIP", "THIGH"],
    130: ["MIDRIFF", "WAIST", "MIDDLE-HIP", "HIPBONE", "HIP", "THIGH"],
    90: ["MID", "CAPRI", "ANKLE", "LONG", "MAXI"],
    95: ["BERMUDA1", "BERMUDA2", "KNEE"],
    88: ["MID", "CAPRI", "ANKLE", "LONG", "MAXI"],
    92: ["MID", "CAPRI", "ANKLE", "LONG"],
    97: [
      "MICRO",
      "SHORT1",
      "SHORT2",
      "BERMUDA1",
      "BERMUDA2",
      "KNEE",
      "MID",
      "CAPRI",
      "ANKLE"
    ],
    96: ["MICRO", "SHORT1", "SHORT2"],
    86: ["MID", "CAPRI", "ANKLE", "KNEE"],
    85: ["MID", "CAPRI", "ANKLE", "LONG", "MAXI"],
    91: ["MID", "CAPRI", "ANKLE", "LONG", "MAXI"],
    87: ["MID", "CAPRI", "ANKLE", "LONG", "MAXI"],
    99: [
      "MICRO",
      "MINI1",
      "MINI2",
      "KNEE",
      "MID1",
      "MID2",
      "LONG",
      "MAXI1",
      "MAXI2"
    ],
    308: [],
    309: [],
    // 308: ["MICRO", "MINI1", "MINI2", "KNEE"],
    // 309: ["MID1", "MID2", "LONG", "MAXI1", "MAXI2"],
    98: [
      "MICRO",
      "MINI1",
      "MINI2",
      "KNEE",
      "MID1",
      "MID2",
      "LONG",
      "MAXI1",
      "MAXI2"
    ],
    306: [],
    307: [],
    // 306: ["MICRO", "MINI1", "MINI2", "KNEE"],
    // 307: ["MID1", "MID2", "LONG", "MAXI1", "MAXI2"],
    106: ["MID1", "MID2", "LONG", "MAXI1", "MAXI2"],
    200: [],
    // 200: ["MID1", "MID2", "LONG", "MAXI1", "MAXI2"],
    103: [
      "MICRO",
      "MINI1",
      "MINI2",
      "KNEE",
      "MID1",
      "MID2",
      "LONG",
      "MAXI1",
      "MAXI2"
    ],
    314: [],
    315: [],
    // 314: ["MICRO", "MINI1", "MINI2", "KNEE"],
    // 315: ["MID1", "MID2", "LONG", "MAXI1", "MAXI2"],
    105: ["MID1", "MID2", "LONG", "MAXI1", "MAXI2"],
    319: [],
    // 319: ["MID1", "MID2", "LONG", "MAXI1", "MAXI2"],
    154: ["MICRO", "MINI", "KNEE1", "KNEE2", "MID", "LONG", "MAXI"],
    149: ["MICRO", "MINI", "KNEE1", "KNEE2", "MID", "LONG", "MAXI"],
    147: ["MICRO", "MINI", "KNEE1", "KNEE2", "MID", "LONG", "MAXI"],
    145: ["MICRO", "MINI", "KNEE1", "KNEE2", "MID", "LONG", "MAXI"],
    146: ["MICRO", "MINI", "KNEE1", "KNEE2", "MID", "LONG", "MAXI"],
    150: ["MICRO", "MINI", "KNEE1", "KNEE2", "MID", "LONG", "MAXI"],
    12: ["MICRO", "MIDRIFF", "WAIST", "HIP", "THIGH1", "THIGH2", "KNEE", "MID"],
    45: [
      "WAIST",
      "MIDDLE-HIP",
      "HIP",
      "THIGH",
      "KNEE1",
      "KNEE2",
      "MID1",
      "MID2",
      "LONG"
    ],
    49: [
      "WAIST",
      "MIDDLE-HIP",
      "HIP",
      "THIGH",
      "KNEE1",
      "KNEE2",
      "MID1",
      "MID2",
      "LONG"
    ],
    48: [
      "WAIST",
      "MIDDLE-HIP",
      "HIP",
      "THIGH",
      "KNEE1",
      "KNEE2",
      "MID1",
      "MID2",
      "LONG"
    ],
    43: [
      "WAIST",
      "MIDDLE-HIP",
      "HIP",
      "THIGH",
      "KNEE1",
      "KNEE2",
      "MID1",
      "MID2",
      "LONG"
    ],
    44: [
      "WAIST",
      "MIDDLE-HIP",
      "HIP",
      "THIGH",
      "KNEE1",
      "KNEE2",
      "MID1",
      "MID2",
      "LONG"
    ],
    39: [
      "WAIST",
      "MIDDLE-HIP",
      "HIP",
      "THIGH",
      "KNEE1",
      "KNEE2",
      "MID1",
      "MID2",
      "LONG"
    ],
    41: [
      "WAIST",
      "MIDDLE-HIP",
      "HIP",
      "THIGH",
      "KNEE1",
      "KNEE2",
      "MID1",
      "MID2",
      "LONG"
    ],
    59: ["MIDRIFF", "WAIST", "MIDDLE-HIP", "HIPBONE", "HIP", "THIGH"],
    61: ["MIDRIFF", "WAIST", "MIDDLE-HIP", "HIPBONE", "HIP", "THIGH"],
    60: ["MIDRIFF", "WAIST", "MIDDLE-HIP", "HIPBONE", "HIP", "THIGH"],
    62: ["MIDRIFF", "WAIST", "MIDDLE-HIP", "HIPBONE", "HIP", "THIGH"],
    54: ["MIDRIFF", "WAIST", "MIDDLE-HIP", "HIPBONE", "HIP", "THIGH"],
    67: [
      "WAIST",
      "MIDDLE-HIP",
      "HIPBONE",
      "HIP",
      "THIGH1",
      "THIGH2",
      "KNEE",
      "MID",
      "LONG"
    ],
    64: [
      "WAIST",
      "MIDDLE-HIP",
      "HIPBONE",
      "HIP",
      "THIGH1",
      "THIGH2",
      "KNEE",
      "MID",
      "LONG"
    ],
    70: [
      "WAIST",
      "MIDDLE-HIP",
      "HIPBONE",
      "HIP",
      "THIGH1",
      "THIGH2",
      "KNEE",
      "MID",
      "LONG"
    ],
    69: [
      "WAIST",
      "MIDDLE-HIP",
      "HIPBONE",
      "HIP",
      "THIGH1",
      "THIGH2",
      "KNEE",
      "MID",
      "LONG"
    ],
    65: [
      "WAIST",
      "MIDDLE-HIP",
      "HIPBONE",
      "HIP",
      "THIGH1",
      "THIGH2",
      "KNEE",
      "MID",
      "LONG"
    ],
    66: [
      "WAIST",
      "MIDDLE-HIP",
      "HIPBONE",
      "HIP",
      "THIGH1",
      "THIGH2",
      "KNEE",
      "MID",
      "LONG"
    ],
    73: ["MIDRIFF", "MIDDLE-HIP", "HIP", "THIGH", "MID", "KNEE"],
    77: ["MIDRIFF", "MIDDLE-HIP", "HIP", "THIGH", "MID", "KNEE"],
    72: ["MIDRIFF", "MIDDLE-HIP", "HIP", "THIGH", "MID", "KNEE"],
    82: ["MIDRIFF", "MIDDLE-HIP", "HIP", "THIGH", "MID", "KNEE"],
    76: ["MIDRIFF", "MIDDLE-HIP", "HIP", "THIGH", "MID", "KNEE"],
    80: ["MIDRIFF", "MIDDLE-HIP", "HIP", "THIGH", "MID", "KNEE"],
    74: ["MIDRIFF", "MIDDLE-HIP", "HIP", "THIGH", "MID", "KNEE"],
    79: ["MIDRIFF", "MIDDLE-HIP", "HIP", "THIGH", "MID", "KNEE"],
  };
}

Map<int, List<String>> createMapBodylengthM() {
  return {
    141: ["MIDDLE-HIP", "HIP"],
    140: ["MIDDLE-HIP", "HIP"],
    142: ["MIDDLE-HIP", "HIP"],
    16: ["MIDDLE-HIP", "HIP"],
    133: ["MIDDLE-HIP", "HIP", "THIGH"],
    138: ["MIDDLE-HIP", "HIP", "THIGH"],
    136: ["MIDDLE-HIP", "HIP", "THIGH"],
    129: ["MIDDLE-HIP", "HIP", "THIGH"],
    134: ["MIDDLE-HIP", "HIP", "THIGH"],
    137: ["MIDDLE-HIP", "HIP", "THIGH"],
    130: ["MIDDLE-HIP", "HIP", "THIGH"],
    90: ["MID", "ANKLE", "LONG"],
    95: ["SHORT", "KNEE1", "KNEE2"],
    88: ["MID", "ANKLE", "LONG"],
    92: ["MID", "ANKLE", "LONG"],
    97: ["SHORT", "KNEE1", "KNEE2", "MID", "ANKLE"],
    96: ["SHORT"],
    86: ["MID", "ANKLE", "LONG"],
    85: ["MID", "ANKLE", "LONG"],
    91: ["MID", "ANKLE", "LONG"],
    87: ["MID", "ANKLE", "LONG"],
    12: ["MIDDLE-HIP", "HIPBONE", "HIP", "THIGH1", "THIGH2"],
    45: [
      "MIDDLE-HIP",
      "HIPBONE",
      "HIP",
      "THIGH1",
      "THIGH2",
      "KNEE",
      "MID",
      "LONG"
    ],
    49: [
      "MIDDLE-HIP",
      "HIPBONE",
      "HIP",
      "THIGH1",
      "THIGH2",
      "KNEE",
      "MID",
      "LONG"
    ],
    48: [
      "MIDDLE-HIP",
      "HIPBONE",
      "HIP",
      "THIGH1",
      "THIGH2",
      "KNEE",
      "MID",
      "LONG"
    ],
    43: [
      "MIDDLE-HIP",
      "HIPBONE",
      "HIP",
      "THIGH1",
      "THIGH2",
      "KNEE",
      "MID",
      "LONG"
    ],
    39: [
      "MIDDLE-HIP",
      "HIPBONE",
      "HIP",
      "THIGH1",
      "THIGH2",
      "KNEE",
      "MID",
      "LONG"
    ],
    41: [
      "MIDDLE-HIP",
      "HIPBONE",
      "HIP",
      "THIGH1",
      "THIGH2",
      "KNEE",
      "MID",
      "LONG"
    ],
    61: ["MIDDLE-HIP", "HIPBONE", "HIP", "THIGH1"],
    60: ["MIDDLE-HIP", "HIPBONE", "HIP", "THIGH1"],
    62: ["MIDDLE-HIP", "HIPBONE", "HIP", "THIGH1"],
    54: ["MIDDLE-HIP", "HIPBONE", "HIP", "THIGH1"],
    67: ["MIDDLE-HIP", "HIPBONE", "HIP", "THIGH1", "THIGH2", "KNEE", "MID"],
    64: ["MIDDLE-HIP", "HIPBONE", "HIP", "THIGH1", "THIGH2", "KNEE", "MID"],
    70: ["MIDDLE-HIP", "HIPBONE", "HIP", "THIGH1", "THIGH2", "KNEE", "MID"],
    69: ["MIDDLE-HIP", "HIPBONE", "HIP", "THIGH1", "THIGH2", "KNEE", "MID"],
    65: ["MIDDLE-HIP", "HIPBONE", "HIP", "THIGH1", "THIGH2", "KNEE", "MID"],
    66: ["MIDDLE-HIP", "HIPBONE", "HIP", "THIGH1", "THIGH2", "KNEE", "MID"],
    73: ["MIDDLE-HIP", "HIPBONE", "HIP"],
    77: ["MIDDLE-HIP", "HIPBONE", "HIP"],
    76: ["MIDDLE-HIP", "HIPBONE", "HIP"],
    80: ["MIDDLE-HIP", "HIPBONE", "HIP"],
    74: ["MIDDLE-HIP", "HIPBONE", "HIP"],
    79: ["MIDDLE-HIP", "HIPBONE", "HIP"],
  };
}

Map<int, List<String>> createMapSleevelengthF() {
  return {
    108: ["VEST", "CAP", "HALF", "ELBOW", "THREEQUATER", "WRIST"],
    120: ["SLING", "VEST"],
    115: ["VEST", "CAP", "HALF", "ELBOW", "THREEQUATER", "WRIST"],
    113: ["VEST", "CAP", "HALF", "ELBOW", "THREEQUATER", "WRIST"],
    121: ["VEST", "CAP", "HALF", "ELBOW", "THREEQUATER", "WRIST"],
    117: ["VEST", "CAP", "HALF", "ELBOW", "THREEQUATER", "WRIST"],
    119: ["VEST", "CAP", "HALF", "ELBOW", "THREEQUATER", "WRIST"],
    118: ["VEST", "CAP", "HALF", "ELBOW", "THREEQUATER", "WRIST"],
    19: ["SLING"],
    141: ["VEST", "CAP", "HALF", "ELBOW", "THREEQUATER", "WRIST"],
    144: ["SLING", "VEST"],
    140: ["VEST", "CAP", "HALF", "ELBOW", "THREEQUATER", "WRIST"],
    142: ["VEST", "CAP", "HALF", "ELBOW", "THREEQUATER", "WRIST"],
    16: ["VEST", "CAP", "HALF", "ELBOW", "THREEQUATER", "WRIST"],
    133: ["VEST", "CAP", "HALF", "ELBOW", "THREEQUATER", "WRIST"],
    138: ["VEST", "CAP", "HALF", "ELBOW", "THREEQUATER", "WRIST"],
    136: ["VEST", "CAP", "HALF", "ELBOW", "THREEQUATER", "WRIST"],
    129: ["VEST", "CAP", "HALF", "ELBOW", "THREEQUATER", "WRIST"],
    134: ["SLING", "VEST"],
    139: ["SLING"],
    137: ["VEST", "CAP", "HALF", "ELBOW", "THREEQUATER", "WRIST"],
    130: ["VEST", "CAP", "HALF", "ELBOW", "THREEQUATER", "WRIST"],
    90: [],
    95: [],
    88: [],
    92: [],
    97: [],
    96: [],
    86: [],
    85: [],
    91: [],
    87: [],
    309: [],
    308: [],
    307: [],
    306: [],
    200: [],
    315: [],
    314: [],
    319: [],
    154: ["SLING", "VEST", "CAP", "HALF", "ELBOW", "THREEQUATER", "WRIST"],
    149: ["SLING", "VEST"],
    147: ["SLING", "VEST", "CAP", "HALF", "ELBOW", "THREEQUATER", "WRIST"],
    145: ["SLING", "VEST", "CAP", "HALF", "ELBOW", "THREEQUATER", "WRIST"],
    146: ["SLING", "VEST"],
    150: ["SLING", "VEST", "CAP", "HALF", "ELBOW", "THREEQUATER", "WRIST"],
    12: ["CAP", "HALF", "ELBOW", "THREEQUATER", "LONG"],
    45: ["CAP", "HALF", "ELBOW", "THREEQUATER", "LONG"],
    49: ["CAP", "HALF", "ELBOW", "THREEQUATER", "LONG"],
    48: ["CAP", "HALF", "ELBOW", "THREEQUATER", "LONG"],
    43: ["CAP", "HALF", "ELBOW", "THREEQUATER", "LONG"],
    44: ["CAP", "HALF", "ELBOW", "THREEQUATER", "LONG"],
    39: ["CAP", "HALF", "ELBOW", "THREEQUATER", "LONG"],
    41: ["CAP", "HALF", "ELBOW", "THREEQUATER", "LONG"],
    59: ["CAP", "HALF", "ELBOW", "THREEQUATER", "LONG"],
    61: ["CAP", "HALF", "ELBOW", "THREEQUATER", "LONG"],
    60: ["CAP", "HALF", "ELBOW", "THREEQUATER", "LONG"],
    62: ["CAP", "HALF", "ELBOW", "THREEQUATER", "LONG"],
    54: ["CAP", "HALF", "ELBOW", "THREEQUATER", "LONG"],
    67: ["CAP", "HALF", "ELBOW", "THREEQUATER", "LONG"],
    64: ["CAP", "HALF", "ELBOW", "THREEQUATER", "LONG"],
    70: ["CAP", "HALF", "ELBOW", "THREEQUATER", "LONG"],
    69: ["CAP", "HALF", "ELBOW", "THREEQUATER", "LONG"],
    65: ["CAP", "HALF", "ELBOW", "THREEQUATER", "LONG"],
    66: ["CAP", "HALF", "ELBOW", "THREEQUATER", "LONG"],
    73: [],
    77: [],
    72: [],
    82: [],
    76: [],
    80: [],
    74: [],
    79: [],
  };
}

Map<int, List<String>> createMapSleevelengthM() {
  return {
    141: ["VEST", "CAP", "HALF", "ELBOW", "THREEQUATER", "WRIST"],
    140: ["VEST", "CAP", "HALF", "ELBOW", "THREEQUATER", "WRIST"],
    142: ["VEST", "CAP", "HALF", "ELBOW", "THREEQUATER", "WRIST"],
    16: ["VEST", "CAP", "HALF", "ELBOW", "THREEQUATER", "WRIST"],
    133: ["VEST", "CAP", "HALF", "ELBOW", "THREEQUATER", "WRIST"],
    138: ["VEST", "CAP", "HALF", "ELBOW", "THREEQUATER", "WRIST"],
    136: ["VEST", "CAP", "HALF", "ELBOW", "THREEQUATER", "WRIST"],
    129: ["VEST", "CAP", "HALF", "ELBOW", "THREEQUATER", "WRIST"],
    134: ["VEST"],
    137: ["VEST", "CAP", "HALF", "ELBOW", "THREEQUATER", "WRIST"],
    130: ["VEST", "CAP", "HALF", "ELBOW", "THREEQUATER", "WRIST"],
    90: [],
    95: [],
    88: [],
    92: [],
    97: [],
    96: [],
    86: [],
    85: [],
    91: [],
    87: [],
    12: ["CAP", "HALF", "ELBOW", "THREEQUATER", "LONG"],
    45: ["CAP", "HALF", "ELBOW", "THREEQUATER", "LONG"],
    49: ["CAP", "HALF", "ELBOW", "THREEQUATER", "LONG"],
    48: ["CAP", "HALF", "ELBOW", "THREEQUATER", "LONG"],
    43: ["CAP", "HALF", "ELBOW", "THREEQUATER", "LONG"],
    39: ["CAP", "HALF", "ELBOW", "THREEQUATER", "LONG"],
    41: ["CAP", "HALF", "ELBOW", "THREEQUATER", "LONG"],
    61: ["CAP", "HALF", "ELBOW", "THREEQUATER", "LONG"],
    60: ["CAP", "HALF", "ELBOW", "THREEQUATER", "LONG"],
    62: ["CAP", "HALF", "ELBOW", "THREEQUATER", "LONG"],
    54: ["CAP", "HALF", "ELBOW", "THREEQUATER", "LONG"],
    67: ["CAP", "HALF", "ELBOW", "THREEQUATER", "LONG"],
    64: ["CAP", "HALF", "ELBOW", "THREEQUATER", "LONG"],
    70: ["CAP", "HALF", "ELBOW", "THREEQUATER", "LONG"],
    69: ["CAP", "HALF", "ELBOW", "THREEQUATER", "LONG"],
    65: ["CAP", "HALF", "ELBOW", "THREEQUATER", "LONG"],
    66: ["CAP", "HALF", "ELBOW", "THREEQUATER", "LONG"],
    73: [],
    77: [],
    76: [],
    80: [],
    74: [],
    79: [],
  };
}

Map<int, List<String>> createMapDetailF() {
  return {
    108: ["HOOD", "COLLAR", "HIGHNECK", "ETC"],
    120: ["HOOD", "COLLAR", "HIGHNECK", "ETC"],
    115: ["HOOD", "COLLAR", "HIGHNECK", "ETC"],
    113: ["HOOD", "COLLAR", "HIGHNECK", "ETC"],
    121: ["HOOD", "COLLAR", "HIGHNECK", "ETC"],
    117: ["HOOD", "COLLAR", "HIGHNECK", "ETC"],
    119: ["HOOD", "COLLAR", "HIGHNECK", "ETC"],
    118: ["HOOD", "COLLAR", "HIGHNECK", "ETC"],
    19: ["HOOD", "COLLAR", "HIGHNECK", "ETC"],
    141: ["HOOD", "COLLAR", "HIGHNECK", "ETC"],
    144: ["HOOD", "COLLAR", "HIGHNECK", "ETC"],
    140: ["HOOD", "COLLAR", "HIGHNECK", "ETC"],
    142: ["HOOD", "COLLAR", "HIGHNECK", "ETC"],
    16: ["HOOD", "COLLAR", "HIGHNECK", "ETC"],
    133: ["HOOD", "COLLAR", "HIGHNECK", "ETC"],
    138: ["HOOD", "COLLAR", "HIGHNECK", "ETC"],
    136: ["HOOD", "COLLAR", "HIGHNECK", "ETC"],
    129: ["HOOD", "COLLAR", "HIGHNECK", "ETC"],
    134: ["HOOD", "COLLAR", "HIGHNECK", "ETC"],
    139: ["HOOD", "COLLAR", "HIGHNECK", "ETC"],
    137: ["HOOD", "COLLAR", "HIGHNECK", "ETC"],
    130: ["HOOD", "COLLAR", "HIGHNECK", "ETC"],
    90: [],
    95: [],
    88: [],
    92: [],
    97: [],
    96: [],
    86: [],
    85: [],
    91: [],
    87: [],
    309: [],
    308: [],
    307: [],
    306: [],
    200: [],
    315: [],
    314: [],
    319: [],
    154: ["HOOD", "COLLAR", "HIGHNECK", "ETC"],
    149: ["HOOD", "COLLAR", "HIGHNECK", "ETC"],
    147: ["HOOD", "COLLAR", "HIGHNECK", "ETC"],
    145: ["HOOD", "COLLAR", "HIGHNECK", "ETC"],
    146: ["HOOD", "COLLAR", "HIGHNECK", "ETC"],
    150: ["HOOD", "COLLAR", "HIGHNECK", "ETC"],
    12: ["HOOD", "COLLAR", "HIGHNECK", "ETC"],
    45: ["HOOD", "COLLAR", "HIGHNECK", "ETC"],
    49: ["HOOD", "COLLAR", "HIGHNECK", "ETC"],
    48: ["HOOD", "COLLAR", "HIGHNECK", "ETC"],
    43: ["HOOD", "COLLAR", "HIGHNECK", "ETC"],
    44: ["HOOD", "COLLAR", "HIGHNECK", "ETC"],
    39: ["HOOD", "COLLAR", "HIGHNECK", "ETC"],
    41: ["HOOD", "COLLAR", "HIGHNECK", "ETC"],
    59: ["HOOD", "COLLAR", "HIGHNECK", "ETC"],
    61: ["HOOD", "COLLAR", "HIGHNECK", "ETC"],
    60: ["HOOD", "COLLAR", "HIGHNECK", "ETC"],
    62: ["HOOD", "COLLAR", "HIGHNECK", "ETC"],
    54: ["HOOD", "COLLAR", "HIGHNECK", "ETC"],
    67: ["HOOD", "COLLAR", "HIGHNECK", "ETC"],
    64: ["HOOD", "COLLAR", "HIGHNECK", "ETC"],
    70: ["HOOD", "COLLAR", "HIGHNECK", "ETC"],
    69: ["HOOD", "COLLAR", "HIGHNECK", "ETC"],
    65: ["HOOD", "COLLAR", "HIGHNECK", "ETC"],
    66: ["HOOD", "COLLAR", "HIGHNECK", "ETC"],
    73: ["HOOD", "COLLAR", "HIGHNECK", "ETC"],
    77: ["HOOD", "COLLAR", "HIGHNECK", "ETC"],
    72: ["HOOD", "COLLAR", "HIGHNECK", "ETC"],
    82: ["HOOD", "COLLAR", "HIGHNECK", "ETC"],
    76: ["HOOD", "COLLAR", "HIGHNECK", "ETC"],
    80: ["HOOD", "COLLAR", "HIGHNECK", "ETC"],
    74: ["HOOD", "COLLAR", "HIGHNECK", "ETC"],
    79: ["HOOD", "COLLAR", "HIGHNECK", "ETC"],
  };
}

Map<int, List<String>> createMapDetailM() {
  return {
    141: ["HOOD", "COLLAR", "HIGHNECK", "ETC"],
    140: ["HOOD", "COLLAR", "HIGHNECK", "ETC"],
    142: ["HOOD", "COLLAR", "HIGHNECK", "ETC"],
    16: ["HOOD", "COLLAR", "HIGHNECK", "ETC"],
    133: ["HOOD", "COLLAR", "HIGHNECK", "ETC"],
    138: ["HOOD", "COLLAR", "HIGHNECK", "ETC"],
    136: ["HOOD", "COLLAR", "HIGHNECK", "ETC"],
    129: ["HOOD", "COLLAR", "HIGHNECK", "ETC"],
    134: ["HOOD", "COLLAR", "HIGHNECK", "ETC"],
    137: ["HOOD", "COLLAR", "HIGHNECK", "ETC"],
    130: ["HOOD", "COLLAR", "HIGHNECK", "ETC"],
    90: [],
    95: [],
    88: [],
    92: [],
    97: [],
    96: [],
    86: [],
    85: [],
    91: [],
    87: [],
    12: ["HOOD", "COLLAR", "HIGHNECK", "ETC"],
    45: ["HOOD", "COLLAR", "HIGHNECK", "ETC"],
    49: ["HOOD", "COLLAR", "HIGHNECK", "ETC"],
    48: ["HOOD", "COLLAR", "HIGHNECK", "ETC"],
    43: ["HOOD", "COLLAR", "HIGHNECK", "ETC"],
    39: ["HOOD", "COLLAR", "HIGHNECK", "ETC"],
    41: ["HOOD", "COLLAR", "HIGHNECK", "ETC"],
    61: ["HOOD", "COLLAR", "HIGHNECK", "ETC"],
    60: ["HOOD", "COLLAR", "HIGHNECK", "ETC"],
    62: ["HOOD", "COLLAR", "HIGHNECK", "ETC"],
    54: ["HOOD", "COLLAR", "HIGHNECK", "ETC"],
    67: ["HOOD", "COLLAR", "HIGHNECK", "ETC"],
    64: ["HOOD", "COLLAR", "HIGHNECK", "ETC"],
    70: ["HOOD", "COLLAR", "HIGHNECK", "ETC"],
    69: ["HOOD", "COLLAR", "HIGHNECK", "ETC"],
    65: ["HOOD", "COLLAR", "HIGHNECK", "ETC"],
    66: ["HOOD", "COLLAR", "HIGHNECK", "ETC"],
    73: ["HOOD", "COLLAR", "HIGHNECK", "ETC"],
    77: ["HOOD", "COLLAR", "HIGHNECK", "ETC"],
    76: ["HOOD", "COLLAR", "HIGHNECK", "ETC"],
    80: ["HOOD", "COLLAR", "HIGHNECK", "ETC"],
    74: ["HOOD", "COLLAR", "HIGHNECK", "ETC"],
    79: ["HOOD", "COLLAR", "HIGHNECK", "ETC"],
  };
}

List<String> findValuesForKey(Map<int, List<String>> map, int key) {
  return map[key] ?? [];
}
